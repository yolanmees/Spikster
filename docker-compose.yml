version: '3'

networks:
  laravel:


services:
  nginx:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
      - ./dockerfiles/nginx/:/etc/nginx/conf.d/
    depends_on:
      - php
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - "3306:${DB_PORT}"
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: "${DB_CONNECTION}"
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - APP_DEBUG=${APP_DEBUG:-false}
    restart: unless-stopped
    ports:
      - "9000:9000"
    expose:
      - 9000
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql

    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel
  composer:
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  npm:
    image: node:current-alpine
    dns:
      - 8.8.8.8
    volumes:
      - .:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel
